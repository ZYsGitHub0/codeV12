server:
  port: 8110
spring:
  application:
    name: gateway-server

  cloud:
    gateway:
      routes: #路由路线 可配置多个
        - id: user-service #当前路由的唯一标志(自定义 唯一即可)
          #          uri: http://127.0.0.1:8090 #路由目标微服务地址
          uri: lb://user-service #路由目标微服务应用名称(从注册中心拉取 lb=并使用负载均衡)
          predicates: #断言 (匹配规则(拦截规则))
            - Path=/user-service/** #按照路径匹配的规则
          filters: #配置路由局部过滤器
            - AddRequestHeader=info,java is best!
      default-filters: #默认过滤项
        - name: Hystrix #指定过滤工厂名
          args: #指定过滤的参数
            name: fallbackcmd #hystrix指令名(服务降级处理方式)
            fallbackUri: forward:/fallbackTest #失败后跳转的路径(Controller)
        - StripPrefix=1 #去除作用路由的一个前缀(user-service)因为那个前缀只用于路由哪个服务(如果一个路由有多个controller路径不一则需要一个统一的前缀区分)
        - name: RequestRateLimiter #请求数限流过滤工厂
          args:
            key-resolver: "#{@ipKeyResolver}" #指定key生成器
            redis-rate-limiter.replenishRate: 2 #生成令牌速率
            redis-rate-limiter.burstCapacity: 2 #桶容量
  redis:
    host: 127.0.0.1
    port: 6379

#配置拉取服务的注册中心地址
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8888/eureka

